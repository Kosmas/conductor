require 'spec_helper'

feature 'hidden links' do
  let(:user) { FactoryGirl.create(:user) }
  let(:admin) { FactoryGirl.create(:admin_user) }
  let(:project) { FactoryGirl.create(:project) }
  let(:ticket) { FactoryGirl.create(:ticket, project: project, user: user) }

  context 'anonymous users' do

    scenario 'cannot see the New Project link' do
      visit '/'
      expect(page).to_not have_link('New Project')
    end

    scenario 'cannot see the Edit Project link' do
      visit project_path(project)
      expect(page).to_not have_link('Edit Project')
    end

    scenario 'cannot see the Delete Project link' do
      visit project_path(project)
      expect(page).to_not have_link('Edit Project')
    end
  end

  context 'regular users' do
    before { sign_in_as!(user) }
    
    scenario 'cannot see the New Project link' do
      visit '/'
      expect(page).to_not have_link('New Project')
    end

    scenario 'cannot see the Edit Project link' do
      visit project_path(project)
      expect(page).to_not have_link('Edit Project')
    end

    scenario 'cannot see the Delete Project link' do
      visit project_path(project)
      expect(page).to_not have_link('Edit Project')
    end

    scenario 'New ticket link is shown to a user with permission' do
      define_permission!(user, 'view', project)
      define_permission!(user, 'create tickets', project)
      visit project_path(project)
      expect(page).to have_link('New Ticket')
    end

    scenario 'New ticket link is hidden from a user without permission' do
      define_permission!(user, 'view', project)
      visit project_path(project)
      expect(page).to_not have_link('New Ticket')
    end

    scenario 'Edit ticket link is shown to a user with permission' do
      # this scenario needs the ticket created first to set correct permissions
      ticket
      define_permission!(user, 'view', project)
      define_permission!(user, 'edit tickets', project)
      visit project_path(project)
      click_link ticket.title
      expect(page).to have_link('Edit Ticket')
    end

    scenario 'Edit ticket link is hidden from a user without permission' do
      ticket
      define_permission!(user, 'view', project)
      visit project_path(project)
      click_link ticket.title
      expect(page).to_not have_link('Edit Ticket')
    end
  end

  context 'admin users' do
    before { sign_in_as!(admin) }
    
    scenario 'can see the New Project link' do
      visit '/'
      expect(page).to have_link('New Project')
    end

    scenario 'can see the Edit Project link' do
      visit project_path(project)
      expect(page).to have_link('Edit Project')
    end

    scenario 'can see the Delete Project link' do
      visit project_path(project)
      expect(page).to have_link('Edit Project')
    end

    scenario 'New ticket link is shown to admins' do
      visit project_path(project)
      expect(page).to have_link('New Ticket')
    end

    scenario 'Edit ticket link is shown to admins' do
      ticket
      visit project_path(project)
      click_link ticket.title
      expect(page).to have_link('Edit Ticket')
    end
  end
end
